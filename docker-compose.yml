version: "3.9"
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app-container
    env_file:
      - .env
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy  # Wait until db is healthy
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run start
    networks:
      - app-network

  websocket:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: websocket-container
    environment:
      DATABASE_URL: ${DATABASE_URL}
    env_file:
      - .env
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy  # Wait until db is healthy
    networks:
      - app-network

  db:
    image: postgres:15
    container_name: postgres-container
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "jumbo-test", "-h", "localhost", "-p", "5432"]
      interval: 10s
      retries: 5
      start_period: 5s
      timeout: 5s
    networks:
      - app-network

networks:
  app-network:

volumes:
  postgres-data:
